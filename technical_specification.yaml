feature: Weather CLI

libraries:
  - click: For building the command-line interface.
  - rich: For enhanced terminal output.
  - requests: For making API calls to the weather service.
  - pytest: For writing and running tests.

APIs:
  - OpenWeatherMap: A free weather API to get weather data.

tasks:
  - name: Implement CLI entry point
    file: src/weather_cli.py
    description: |
      We are building a CLI tool to fetch weather reports for a specific location.

      You need to implement `src/weather_cli.py` to serve as the entry point for the CLI.
      Follow these steps:
        1. Import necessary libraries: click, rich, and requests.
        2. Define the main CLI function using click.
        3. Add options for location, temperature unit (Celsius or Fahrenheit).
        4. Implement logic to fetch weather data from the OpenWeatherMap API.
        5. Handle errors gracefully and provide user-friendly messages.
        6. Use rich for enhanced terminal output.

  - name: Implement weather fetching logic
    file: src/weather_service.py
    description: |
      This module will handle the logic for fetching weather data from the OpenWeatherMap API.

      You need to implement `src/weather_service.py` to encapsulate the API interaction.
      Follow these steps:
        1. Import the requests library.
        2. Define a function to fetch weather data for a given location.
        3. Handle API key management and URL construction.
        4. Parse the API response and return relevant data.
        5. Handle errors and edge cases, such as invalid location or API errors.

  - name: Write tests for CLI functionality
    file: tests/test_weather_cli.py
    description: |
      This file will contain pytests for the main functionality of the CLI.

      You need to implement `tests/test_weather_cli.py` to ensure the CLI works as expected.
      Follow these steps:
        1. Import pytest and click.testing.
        2. Write tests for different scenarios, such as valid location, invalid location, and different temperature units.
        3. Mock API responses to test error handling and edge cases.

  - name: Write README file
    file: README.md
    description: |
      This file will provide instructions on how to use the CLI.

      You need to implement `README.md` to guide users on installing and using the CLI.
      Follow these steps:
        1. Provide an overview of the CLI tool.
        2. Include installation instructions.
        3. Provide usage examples and explain available options.
        4. Mention any prerequisites, such as obtaining an API key from OpenWeatherMap.
